# В качестве базового образа используем ubuntu:latest
FROM centos:centos7

RUN yum install -y epel-release centos-release-scl

RUN  yum install -y make ninja-build devtoolset-7-gcc-c++ wget

RUN yum install -y git qtbase5-common-devel  gettext qt5-qtbase-devel plantuml libuuid-devel libcurl-devel openssl-devel

RUN mkdir /opt/cmake \
 && wget -P / https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh \
 && sh /cmake-3.13.4-Linux-x86_64.sh --prefix=/opt/cmake --skip-license \
 && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake

RUN mkdir /3rdparty \
 && wget -P /3rdparty https://dl.bintray.com/boostorg/release/1.63.0/source/boost_1_63_0.tar.gz \
 && cd /3rdparty \
 && tar -xzf boost_1_63_0.tar.gz
 
RUN yum install -y bzip2-devel zlib-devel libicu-devel python-devel 

RUN cd /3rdparty/boost_1_63_0 \
 && scl enable devtoolset-7 "./bootstrap.sh --prefix=/usr/local --with-toolset=gcc && ./b2 install" 
 
WORKDIR /3rdparty

RUN git clone https://github.com/kisli/vmime.git && cd vmime && git checkout e2fc1911f17374ae5343c28ec52493f1dfdf09ab 

WORKDIR /3rdparty/vmime-build

RUN yum install -y pkg-config  gnutls-devel libgsasl-devel

RUN scl enable devtoolset-7 "cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DVMIME_HAVE_MESSAGING_PROTO_SENDMAIL=False \
    -DVMIME_HAVE_MLANG_H=False \
    -DVMIME_BUILD_STATIC_LIBRARY=OFF \
    -DVMIME_BUILD_SHARED_LIBRARY=ON \
    -DVMIME_BUILD_DOCUMENTATION=OFF \
    -DVMIME_CHARSETCONV_LIB=iconv \
    -D_RUN_RESULT_VAR=0 \
    -DVMIME_BUILD_SAMPLES=OFF /3rdparty/vmime \
  && make -j4 JOBS=4 && make install"
 
WORKDIR /3rdparty
RUN wget -P /3rdparty http://download.oracle.com/berkeley-db/db-6.2.32.tar.gz && cd /3rdparty \
 && tar -xzf db-6.2.32.tar.gz

WORKDIR /3rdparty/db-6.2.32/build_unix

RUN scl enable devtoolset-7 "../dist/configure \
      --enable-cxx \
      --with-cryptography=yes \
      --enable-stl \
      --disable-replication \
      --disable-shared \
      --prefix=/usr/local \
      && make -j8 && make install"

WORKDIR /3rdparty

RUN  git clone https://github.com/sqglobe/persistent-storage.git && cd persistent-storage && git checkout c7147fb9020934c3e3e83fc053b06e24c8c527fd \
     && git submodule init \ 
     && git submodule update 
     

WORKDIR /3rdparty/persistent-storage-build

RUN scl enable devtoolset-7 "cmake \
     -DTHREADS_PREFER_PTHREAD_FLAG=ON \
     -DCMAKE_INSTALL_PREFIX=/usr/local \
     -DBerkeleyDB_ROOT_DIR=/usr/local /3rdparty/persistent-storage \
     && make -j4 && make install"

RUN yum install -y   qt5-linguist

RUN cd  /3rdparty && git clone https://github.com/weidai11/cryptopp.git \
    && cd cryptopp && git checkout CRYPTOPP_8_2_0 \
    && git submodule add https://github.com/noloader/cryptopp-cmake.git cmake \
    && cd cmake && git checkout CRYPTOPP_8_2_0 && git submodule update --remote \
    && cd ../ \
    && cp "$PWD/cmake/cryptopp-config.cmake" "$PWD" \
    && cp "$PWD/cmake/CMakeLists.txt" "$PWD" \
    && mkdir build && cd build \
    && scl enable devtoolset-7 "cmake -DBUILD_TESTING=OFF -DBUILD_DOCUMENTATION=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install"

RUN cd  /3rdparty && git clone https://github.com/fmtlib/fmt.git \
    && cd fmt && git checkout '6.1.2' \
    && mkdir build && cd build \
    && scl enable devtoolset-7 "cmake -DBUILD_SHARED_LIBS=OFF -DFMT_INSTALL=ON -DFMT_TEST=OFF -DFMT_DOC=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install"

RUN cd  /3rdparty && git clone https://github.com/nlohmann/json.git \
    && cd json && git checkout  v3.7.3 \
    && mkdir build && cd build \
    && scl enable devtoolset-7 "cmake -DJSON_BuildTests=OFF -DJSON_Install=ON ../ \
    && make -j20 && make install"

RUN cd  /3rdparty && git clone https://github.com/pboettch/json-schema-validator.git \
    && cd json-schema-validator && git checkout 940262ceae42848b8bdab1e07fef4c2385b701c3 \
    && mkdir build && cd build \
    && scl enable devtoolset-7 "cmake -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install"

# Установим рабочую директорию нашего приложения
WORKDIR /app/build

# Установим точку входа 
ENTRYPOINT  scl enable devtoolset-7 \
      "cmake -DBUILD_TESTING=OFF -DXG_TESTS=OFF -DUSE_VMIME_SHARED=ON \
      -DCMAKE_PREFIX_PATH=/usr/local/lib/CMake/persistent-storage -DCMAKE_INSTALL_PREFIX=/app/res/SecureDialogues-centos7-x86_64 /app/src \
      && make -j20 JOBS=20 && make install" \
      && cp /usr/local/lib/libvmime.so /app/res/SecureDialogues-centos7-x86_64/plugins/Email.plugin

