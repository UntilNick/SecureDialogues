# В качестве базового образа используем ubuntu:latest
FROM ubuntu:xenial

RUN apt-get update \
 && apt-get install -y software-properties-common \
 && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
 && add-apt-repository -y ppa:kubuntu-ppa/backports \
 && apt-get install -y apt-utils 

RUN  apt-get update \
  && apt-get install -y make gcc-7 g++-7 ninja-build wget 
  
RUN mkdir /opt/cmake \
 && wget -P / https://github.com/Kitware/CMake/releases/download/v3.17.1/cmake-3.17.1-Linux-x86_64.sh \
 && sh /cmake-3.17.1-Linux-x86_64.sh --prefix=/opt/cmake --skip-license \
 && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
  
RUN  apt-get install -y git qtdeclarative5-dev plantuml libboost-all-dev ruby plantuml uuid-dev libcurl4-openssl-dev libssl-dev \
  && gem install prawn --version 2.1.0 \
  && gem install addressable --version 2.4.0 \
  && gem install prawn-svg --version 0.26.0 \
  && gem install prawn-templates --version 0.0.4 \
  && gem install asciidoctor-pdf --pre \
  && gem install rouge \
  && gem install pygments.rb \
  && gem install coderay 

RUN apt install -y pkg-config  libgnutls-dev libghc-gsasl-dev

WORKDIR /build

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 20 --slave /usr/bin/g++ g++ /usr/bin/g++-7

RUN git clone https://github.com/kisli/vmime.git && cd vmime && git checkout e2fc1911f17374ae5343c28ec52493f1dfdf09ab \
  && mkdir build && cd build \
  && cmake -G "Unix Makefiles" -DVMIME_HAVE_MESSAGING_PROTO_SENDMAIL=False \
    -DVMIME_HAVE_MLANG_H=False \
    -DVMIME_BUILD_STATIC_LIBRARY=OFF \
    -DVMIME_BUILD_SHARED_LIBRARY=ON \
    -DVMIME_BUILD_DOCUMENTATION=OFF \
    -DVMIME_CHARSETCONV_LIB=iconv \
    -D_RUN_RESULT_VAR=0 \
    -DVMIME_BUILD_SAMPLES=OFF ../ \
  && make -j4 JOBS=4 && make install

RUN apt-get install -y gettext qttools5-dev qttools5-dev-tools

RUN mkdir /3rdparty && wget -P /3rdparty http://download.oracle.com/berkeley-db/db-6.2.32.tar.gz && cd /3rdparty \
 && tar -xzf db-6.2.32.tar.gz

RUN cd /3rdparty/db-6.2.32/build_unix && ../dist/configure --enable-cxx --with-cryptography=yes --enable-stl --disable-replication --disable-shared --prefix=/usr/local && make -j8 && make install

RUN  git clone https://github.com/sqglobe/persistent-storage.git && cd persistent-storage && git checkout c7147fb9020934c3e3e83fc053b06e24c8c527fd \
     && git submodule init \ 
     && git submodule update \
     && mkdir build && cd build \
     && cmake -DTHREADS_PREFER_PTHREAD_FLAG=ON -DCMAKE_INSTALL_PREFIX=/usr/local -DBerkeleyDB_ROOT_DIR=/usr/local ../ \
     && make -j4 && make install

RUN cd  /3rdparty && git clone https://github.com/weidai11/cryptopp.git \
    && cd cryptopp && git checkout CRYPTOPP_8_2_0 \
    && git submodule add https://github.com/noloader/cryptopp-cmake.git cmake \
    && cd cmake && git checkout CRYPTOPP_8_2_0 && git submodule update --remote \
    && cd ../ \
    && cp "$PWD/cmake/cryptopp-config.cmake" "$PWD" \
    && cp "$PWD/cmake/CMakeLists.txt" "$PWD" \
    && mkdir build && cd build \
    && cmake -DBUILD_TESTING=OFF -DBUILD_DOCUMENTATION=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install

RUN cd  /3rdparty && git clone https://github.com/fmtlib/fmt.git \
    && cd fmt && git checkout '6.1.2' \
    && mkdir build && cd build \
    && cmake -DBUILD_SHARED_LIBS=OFF -DFMT_INSTALL=ON -DFMT_TEST=OFF -DFMT_DOC=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install

RUN cd  /3rdparty && git clone https://github.com/nlohmann/json.git \
    && cd json && git checkout  v3.7.3 \
    && mkdir build && cd build \
    && cmake -DJSON_BuildTests=OFF -DJSON_Install=ON ../ \
    && make -j20 && make install

RUN cd  /3rdparty && git clone https://github.com/pboettch/json-schema-validator.git \
    && cd json-schema-validator && git checkout 940262ceae42848b8bdab1e07fef4c2385b701c3 \
    && mkdir build && cd build \
    && cmake -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=OFF -DCMAKE_BUILD_TYPE=Release ../ \
    && make -j20 && make install

# Установим рабочую директорию нашего приложения

WORKDIR /app/build

# Установим точку входа 
ENTRYPOINT cmake  -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DUSE_VMIME_SHARED=ON -DXG_TESTS=OFF  \
                  -DCMAKE_PREFIX_PATH=/usr/local/lib/CMake/persistent-storage -DCMAKE_INSTALL_PREFIX=/app/res/SecureDialogues-ubuntu-16.04-x86_64   /app/src \
        && make -j20 JOBS=20 && make install \
        && cp /usr/local/lib/libvmime.so /app/res/SecureDialogues-ubuntu-16.04-x86_64/plugins/Email.plugin
